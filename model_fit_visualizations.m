%% read in data
clear
n = 100;
win = readmatrix("win_300_400.txt");
win = win';
win(win == 9999) = NaN;
self_elo = readmatrix("selfelo.txt");
self_elo = self_elo';
self_elo(self_elo == 9999) = NaN;
other_elo = readmatrix("otherelo.txt");
other_elo = other_elo';
other_elo(other_elo == 9999) = NaN;
iters_selo = reshape(readmatrix(sprintf('sim_selfelo_%diters.txt', n)),length(win),[]);
iters_rselo = reshape(readmatrix(sprintf('randsim_selfelo_%diters.txt', n)),length(win),[]);
iters_oelo = reshape(readmatrix(sprintf('sim_otherelo_%diters.txt', n)),length(win),[]);
iters_roelo = reshape(readmatrix(sprintf('randsim_otherelo_%diters.txt', n)),length(win),[]);
perc = [0.6285140562248996, 0.6224899598393574, 0.6184738955823293, 0.6224899598393574, 0.6244979919678715, 0.6224899598393574, 0.6184738955823293, 0.6124497991967871, 0.6184738955823293, 0.6244979919678715, 0.6285140562248996, 0.6184738955823293, 0.6184738955823293, 0.6164658634538153, 0.6204819277108434, 0.6265060240963856, 0.6184738955823293, 0.6184738955823293, 0.6224899598393574, 0.6224899598393574, 0.6204819277108434, 0.6144578313253012, 0.6285140562248996, 0.6224899598393574, 0.6224899598393574, 0.6224899598393574, 0.6184738955823293, 0.6184738955823293, 0.6265060240963856, 0.6164658634538153, 0.6204819277108434, 0.6184738955823293, 0.6204819277108434, 0.6144578313253012, 0.6224899598393574, 0.6204819277108434, 0.6204819277108434, 0.6224899598393574, 0.6184738955823293, 0.6244979919678715, 0.6144578313253012, 0.6204819277108434, 0.6244979919678715, 0.6184738955823293, 0.6224899598393574, 0.6124497991967871, 0.6244979919678715, 0.6204819277108434, 0.6265060240963856, 0.6265060240963856, 0.6224899598393574, 0.6305220883534136, 0.6164658634538153, 0.6124497991967871, 0.6164658634538153, 0.6184738955823293, 0.6164658634538153, 0.6144578313253012, 0.6204819277108434, 0.6244979919678715, 0.6285140562248996, 0.6164658634538153, 0.6164658634538153, 0.6164658634538153, 0.6184738955823293, 0.6164658634538153, 0.6184738955823293, 0.6184738955823293, 0.6204819277108434, 0.6124497991967871, 0.6204819277108434, 0.6204819277108434, 0.6204819277108434, 0.6305220883534136, 0.6224899598393574, 0.6184738955823293, 0.6144578313253012, 0.6104417670682731, 0.6184738955823293, 0.6184738955823293, 0.6244979919678715, 0.6285140562248996, 0.6184738955823293, 0.6144578313253012, 0.6164658634538153, 0.6265060240963856, 0.6224899598393574, 0.6244979919678715, 0.6244979919678715, 0.6204819277108434, 0.6204819277108434, 0.6164658634538153, 0.6184738955823293, 0.6224899598393574, 0.6204819277108434, 0.6144578313253012, 0.6164658634538153, 0.6224899598393574, 0.6144578313253012, 0.6184738955823293];
perc_nohist = [0.6004016064257028, 0.6224899598393574, 0.5983935742971888, 0.6104417670682731, 0.6024096385542169, 0.6144578313253012, 0.6044176706827309, 0.5963855421686747, 0.6104417670682731, 0.5983935742971888, 0.6104417670682731, 0.606425702811245, 0.606425702811245, 0.608433734939759, 0.6044176706827309, 0.6104417670682731, 0.5903614457831325, 0.6024096385542169, 0.6164658634538153, 0.6104417670682731, 0.606425702811245, 0.606425702811245, 0.608433734939759, 0.608433734939759, 0.606425702811245, 0.6104417670682731, 0.606425702811245, 0.6104417670682731, 0.606425702811245, 0.6124497991967871, 0.6184738955823293, 0.6024096385542169, 0.6164658634538153, 0.6004016064257028, 0.6024096385542169, 0.5963855421686747, 0.6104417670682731, 0.6024096385542169, 0.6004016064257028, 0.5983935742971888, 0.606425702811245, 0.608433734939759, 0.606425702811245, 0.6164658634538153, 0.5943775100401606, 0.6124497991967871, 0.606425702811245, 0.606425702811245, 0.6024096385542169, 0.606425702811245, 0.5943775100401606, 0.6004016064257028, 0.6184738955823293, 0.606425702811245, 0.606425702811245, 0.6104417670682731, 0.606425702811245, 0.5983935742971888, 0.6124497991967871, 0.606425702811245, 0.6104417670682731, 0.606425702811245, 0.5983935742971888, 0.6184738955823293, 0.606425702811245, 0.608433734939759, 0.5963855421686747, 0.606425702811245, 0.6164658634538153, 0.6024096385542169, 0.6104417670682731, 0.5963855421686747, 0.6004016064257028, 0.5923694779116466, 0.606425702811245, 0.6144578313253012, 0.6144578313253012, 0.6044176706827309, 0.6124497991967871, 0.6144578313253012, 0.6024096385542169, 0.5983935742971888, 0.6124497991967871, 0.6044176706827309, 0.6124497991967871, 0.606425702811245, 0.6144578313253012, 0.608433734939759, 0.606425702811245, 0.6024096385542169, 0.6124497991967871, 0.606425702811245, 0.608433734939759, 0.6124497991967871, 0.6104417670682731, 0.6024096385542169, 0.606425702811245, 0.6104417670682731, 0.6024096385542169, 0.6024096385542169];
perc_rand = [0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169, 0.6024096385542169];

%% First figure in results
avg = [0.6202409638554218, 0.6066064257028111, 0.6024096385542156];
sem = [0.004312230725759566, 0.006253622323759775, 1.3389793477436902e-15] ./ sqrt(100);
figure; bar(avg); hold on; 
errorbar(1:3,avg,sem,'r.'); title(sprintf('Model Distributions of Correct Win/Loss Predictions'));
set(gca,'xtick',1:3,'ytick', 0.5:0.02:0.65,'xticklabel',{"Full Model", "History Lesion Model", "Highest Elo Wins Algo"}); ylabel('Accuracy');
ylim([0.5,0.65])

%% second figure in results

t = iters_selo-self_elo;
t(t==0) = NaN;
figure
subplot(2,1,1)
for i = 1:100
histogram(t(:,i)); hold on
end
title("Difference Between Full Model Skill Predictions and Observed Elo")
xlabel('Skill - Elo')
ylabel('Count')
xlim([-190,60])
t = iters_rselo-self_elo;
t(t==0) = NaN;
subplot(2,1,2)
for i = 1:100
histogram(t(:,i)); hold on
end
title("Difference Between History Lesion Model Skill Predictions and Observed Elo")
xlabel('Skill - Elo')
ylabel('Count')
xlim([-190,60])

%% third figure in results


n=20;
iters_sim_win_1 = reshape(readmatrix(sprintf('sim_win1_%diters.txt', n)),length(win),[]);
iters_sim_win_2 = reshape(readmatrix(sprintf('sim_win2_%diters.txt', n)),length(win),[]);
iters_sim_win_3 = reshape(readmatrix(sprintf('sim_win3_%diters.txt', n)),length(win),[]);
iters_sim_win_4 = reshape(readmatrix(sprintf('sim_win4_%diters.txt', n)),length(win),[]);
iters_sim_win_5 = reshape(readmatrix(sprintf('sim_win5_%diters.txt', n)),length(win),[]);
iters_sim_win = [iters_sim_win_1, iters_sim_win_2, iters_sim_win_3,iters_sim_win_4,iters_sim_win_5];
n = 100;
rand_draw_win = reshape(readmatrix(sprintf('drawn_win_300_400.txt', n)),length(win),[]);
perc = readmatrix("perciters.txt");
%% continued
iters_sim_win(iters_sim_win == 9999) = NaN;
rand_draw_win(rand_draw_win == 9999) = NaN;

iters_perc_correct = NaN(n,1);
rand_draw_perc_correct = NaN(n,1);
for i = 1:n
    t = iters_sim_win(:,i);
    randt = rand_draw_win(:,i);
    iters_perc_correct(i) = (sum(win == 1 & t == 1) + sum(win == 0 & t == 0)) / (sum(~isnan(t)));
    rand_draw_perc_correct(i) = (sum(win == 1 & randt == 1) + sum(win == 0 & randt == 0)) / (sum(~isnan(randt)));
end

temp = [0.616524028966425	0.610599078341014	0.621461487820935	0.613890717577354	0.621132323897301	0.618828176431863	0.618499012508229	0.611586570111916	0.612574061882818	0.620473996050033];
drawnItems =[];
for i = 1:10
    numItemsToDraw = 10;
    drawnItems = [drawnItems datasample(temp, numItemsToDraw, 'Replace', true)];
end
avg = [mean(iters_perc_correct),nanmean(perc),mean(rand_draw_perc_correct) ];
sem = [std(iters_perc_correct),nanstd(perc), std(rand_draw_perc_correct)] ./ sqrt(100);
figure; bar(avg); hold on; 
errorbar(1:3,avg,sem,'r.'); title(sprintf('Model Distributions of Correct Win/Loss Predictions'));
set(gca,'xtick',1:3,'ytick', 0.5:0.01:0.65,'xticklabel',{"Full Model", "History Lesion Model", "Highest Elo Wins Algo"}); ylabel('Accuracy');
ylim([0.6,0.63])